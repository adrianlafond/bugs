!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("Skin",[],t):"object"==typeof exports?exports.Skin=t():e.Skin=t()}(window,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1);t.Pixi=r.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){this.bug=e,this.app=t,this.legs=[],this.createParts(),this.app.stage.addChild(this.container),this.render()}return e.prototype.render=function(e){var t=this;return void 0===e&&(e=1),this.bug.tick(e),this.destroyLegs(),this.segments.forEach(function(e,n){var r=t.bug.segments[n];e.x=r.x,e.y=r.y,e.rotation=r.radians,r.legs.forEach(function(e){e.forEach(function(e){var n=new PIXI.Graphics;n.lineStyle(1,0,1),e.forEach(function(e,t){n[0===t?"moveTo":"lineTo"](e.x,e.y)}),t.legs.push(n),t.container.addChild(n)})})}),this},e.prototype.createParts=function(){this.container=new PIXI.Container,this.createSegments()},e.prototype.createSegments=function(){var e=this;this.segments=this.bug.segments.map(function(){var t=new PIXI.Container;t.pivot=new PIXI.Point(8,8);var n=new PIXI.Graphics;n.lineStyle(1,0,1),n.beginFill(8421504),n.drawCircle(8,8,8),n.endFill();var r=e.app.renderer.generateTexture(n,1,1),i=new PIXI.Sprite(r);return t.addChild(i),t.addChild(e.createFace()),e.container.addChild(t),t})},e.prototype.createFace=function(){var e=new PIXI.Graphics;e.lineStyle(1,0,1),e.moveTo(9,5),e.lineTo(13,5);var t=new PIXI.Graphics;t.lineStyle(1,0,1),t.moveTo(11,7),t.lineTo(11,3);var n=new PIXI.Graphics;n.lineStyle(1,0,1),n.moveTo(9,11),n.lineTo(13,11);var r=new PIXI.Graphics;r.lineStyle(1,0,1),r.moveTo(11,9),r.lineTo(11,13);var i=new PIXI.Container;return i.addChild(e),i.addChild(t),i.addChild(n),i.addChild(r),i},e.prototype.destroyLegs=function(){this.legs.forEach(function(e){e.parent.removeChild(e),e.destroy()}),this.legs=[]},e}();t.default=r}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,